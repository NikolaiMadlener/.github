#
# This source file is part of the Stanford Biodesign for Digital Health open-source project
#
# SPDX-FileCopyrightText: 2022 Stanford Biodesign for Digital Health and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Build and Test Swift Package Manager

on:
  workflow_call:
    inputs:
      path:
        description: 'The path where the Swift Package is located. Defaults to $GITHUB_WORKSPACE'
        required: false
        type: string
        default: '.'
      packagename:
        description: 'Name of the package required for generating a test coverage'
        required: true
        type: string
      test:
        description: 'A flag indicating if the Swift package contains tests'
        required: false
        type: boolean
        default: true

jobs:
  macos:
    name: macOS ${{ matrix.configuration }}
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release, release_testing]
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    steps:
    - uses: actions/checkout@v3
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Check Environment
      run: |
          xcodebuild -version
          swift --version
          echo "inputs.packagename: ${{ inputs.packagename }}"
          echo "inputs.path: ${{ inputs.path }}"
          echo "inputs.test: ${{ inputs.test }}"
          echo "matrix.configuration: ${{ matrix.configuration }}"
          echo "cache key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
    - uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
    - name: Release Build
      if: matrix.configuration == 'release'
      run: swift build -c release
    - name: Release Build & Test
      if: matrix.configuration == 'release_testing' && inputs.test
      run: swift test -c release -Xswiftc -enable-testing -Xswiftc -DRELEASE_TESTING
    - name: Debug Build & Test
      if: matrix.configuration == 'debug' && inputs.test
      run: swift test -c debug --enable-code-coverage -Xswiftc -DCOVERAGE
    - name: Convert coverage report
      if: matrix.configuration == 'debug' && inputs.test
      run: xcrun llvm-cov export -format="lcov" .build/debug/${{ inputs.packagename }}PackageTests.xctest/Contents/MacOS/${{ inputs.packagename }}PackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    - name: Upload coverage to Codecov
      if: matrix.configuration == 'debug' && inputs.test
      uses: codecov/codecov-action@v3